<div class="overflow-x-auto p-8">
    <h2 class="font-extrabold text-2xl text-center">Products</h2>
    <table class="table-auto w-full border border-gray-300 mt-4">
        <thead>
            <tr>
                <th class="px-4 py-2 bg-gray-100 border-b">Nombre</th>
                <th class="px-4 py-2 bg-gray-100 border-b">Descripción</th>
                <th class="px-4 py-2 bg-gray-100 border-b">Precio</th>
                <th class="px-4 py-2 bg-gray-100 border-b">Categoría</th>
                <th class="px-4 py-2 bg-gray-100 border-b">Código</th>
                <th class="px-4 py-2 bg-gray-100 border-b">Stock</th>
                <th class="px-4 py-2 bg-gray-100 border-b">Acción</th>
            </tr>
        </thead>
        <tbody>
            {{#each products.docs}}
            <tr>
                <td class="px-4 py-2 border-b">{{this.title}}</td>
                <td class="px-4 py-2 border-b">{{this.description}}</td>
                <td class="px-4 py-2 border-b">${{this.price}}</td>
                <td class="px-4 py-2 border-b">{{this.category}}</td>
                <td class="px-4 py-2 border-b">{{this.code}}</td>
                <td class="px-4 py-2 border-b">{{this.stock}} unidades</td>
                <td class="px-4 py-2 border-b flex items-center gap-2">
                    <a href="/product/{{this._id}}"
                        class="flex w-full justify-center rounded-md bg-indigo-600 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="w-5 h-5">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25" />
                        </svg>

                    </a>

                    <button type="button"
                        class="flex w-full justify-center rounded-md bg-green-700 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-green-800 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                        onclick='addProductToCart("{{this._id}}")'><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" />
                        </svg>

                    </button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>

    <div class="flex justify-center mt-16 w-full">
        <nav class="inline-flex">
            {{#if products.hasPrevPage}}
            <button onclick="changePage({{products.prevPage}})"
                class="px-2 py-1 bg-blue-500 hover:bg-blue-700 text-black font-bold rounded-l">Previous</button>
            {{/if}}
            {{#if products.hasNextPage}}
            <button onclick="changePage({{products.nextPage}})"
                class="px-2 py-1 bg-blue-500 hover:bg-blue-700 text-black font-bold rounded-r">Next</a>
                {{/if}}
        </nav>
    </div>

    <div class="flex justify-center mt-4">
        <label for="limit" class="mr-2">Limit:</label>
        <input type="number" id="limit" name="limit" value="{{products.limit}}" onchange="applyLimit()"
            class="px-2 py-1 border border-gray-300 rounded">
        <button onclick="changeSort(1)"
            class="ml-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Sort Asc</button>
        <button onclick="changeSort(-1)"
            class="ml-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Sort Desc</button>
    </div>
</div>

<script>
    function changeSort(sortValue) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set('sort', sortValue);
        window.location.search = urlParams.toString();
    }

    function applyLimit() {
        const urlParams = new URLSearchParams(window.location.search);
        const getLimit = document.getElementById("limit")
        const limitInputValue = getLimit.value // 3
        urlParams.set('limit', limitInputValue);
        urlParams.set('page', 1);
        window.location.search = urlParams.toString();
    }

    function changePage(page) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set('page', page);
        window.location.search = urlParams.toString();
    }

    let cartId;

    async function addProductToCart(pid) {
        if (!localStorage.getItem('cartId')) {
            let newCart = await fetch(`/api/carts`, { method: 'POST', })
            const data = await newCart.json();
            localStorage.setItem('cartId', data.response._id);
        }
    
    cartId = localStorage.getItem('cartId');

    let quantity = prompt("¿Cuantas unidades del producto deseas añadir?") || 1;

    let addProductToCart = await fetch(`/api/carts/${cartId}/products/${pid}?quantity=${quantity}`, { method: 'POST', })
    const data2 = await addProductToCart.json();

    if(data2.status !== "success") {
        return alert("Hubo un error al intentar añadir el producto al carrito.")
    }

    alert("Se ha añadido el producto al carrito")

    }
</script>